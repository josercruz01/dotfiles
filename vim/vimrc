set nocompatible              " required for vundle
filetype off                  " required for vundle

" ================ General Config ====================

set number                      "Line numbers are good
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set ruler                       "Show cursor column/row information
set hidden

let mapleader=","

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree.git'
Plugin 'jistr/vim-nerdtree-tabs.git'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'skwp/vim-colors-solarized'
Plugin 'mileszs/ack.vim'
Plugin 'cyphactor/vim-open-alternate'
Plugin 'neomake/neomake'
Plugin 'christoomey/vim-tmux-navigator'

call vundle#end()

" ================ Styles ==============
let g:tmux_navigator_no_mappings = 1

nnoremap <silent> <C-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-j> :TmuxNavigateDown<cr>
nnoremap <silent> <C-k> :TmuxNavigateUp<cr>
nnoremap <silent> <C-l> :TmuxNavigateRight<cr>
nnoremap <silent> <C-p> :TmuxNavigatePrevious<cr>

" ================ Styles ==============

set background=dark
silent! colorscheme solarized

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Neomake ======================

" Uncomment to debug neomake. Output will be placed in the logfile.
" let g:neomake_verbose=3
" let g:neomake_logfile='/tmp/neomake.log'

" Open error list after running neomake
let g:neomake_open_list = 2

" Use custom characters for errors and warning markers
let g:neomake_warning_sign = { 'text': '✹', 'texthl': 'WarningMsg', }
let g:neomake_error_sign = { 'text': '✖', 'texthl': 'ErrorMsg', }

" Use eslint from the context of the npm project.
" This allows you to install custom linters and compose your eslintrc.
let g:neomake_javascript_eslint_exe = system('PATH=$(npm bin):$PATH && which eslint | tr -d "\n"')
let g:neomake_javascript_eslint_maker = {
    \ 'args': ['--ignore-path', '.gitignore', '-f', 'compact'],
    \ 'errorformat': '%E%f: line %l\, col %c\, Error - %m,' .
    \ '%W%f: line %l\, col %c\, Warning - %m'
    \ }

" Enabled linters
let g:neomake_javascript_enabled_makers = ['eslint']

" Run neomake on every file change
autocmd! BufWritePost * Neomake

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab

filetype plugin indent on    " required for vundle

" Display tabs and trailing spaces visually
set list listchars=tab:\ \ ,trail:·

" ================ Nerdtree ===========================
"
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1
let g:NERDTreeWinSize = 30

" Nerdtree tabs
let g:nerdtree_tabs_open_on_gui_startup = 0
let g:nerdtree_tabs_focus_on_files = 1

" If currently on a file opens NERDTree otherwise toggle it
function! OpenNerdTree()
  if &modifiable && strlen(expand('%')) > 0
    NERDTreeFind
  else
    NERDTreeToggle
  endif
endfunction

" ================ Search ===========================

set incsearch       " Find the next match as we type the search
set hlsearch        " Highlight searches by default
set ignorecase      " Ignore case when searching...
set smartcase       " ...unless we type a capital

" Configure the_silver_searcher for ack
if executable('ag')
  let g:ackprg = 'ag --vimgrep'
endif

" Configure the_silver_searcher for ctrlp (speed boost)
let g:ctrlp_cache_dir = $HOME . '/.cache/ctrlp'
if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif

" ================ Mappings ========================
noremap <leader>t :CtrlP<Cr>


" Open the Ack command and place the cursor into the quotes
nmap ,ag :Ack ""<Left>

" Search for the current word using Ack
nnoremap K :Ack <cword><CR>

" Open vim-open-alternate on a new vsplit window
nmap <leader>. :vs<Cr> :OpenAlternate<Cr>

" Open Nerdtree with Ctrl-\
nnoremap <silent> <C-\> :call OpenNerdTree()<CR>

" Location list mappings (for Neomake)
nnoremap <leader>ln :lne<CR>       " Go to next item in location list
nnoremap <leader>lp :lp<CR>        " Go to previous in location list
nnoremap <leader>lc :lclose<CR>    " Close the location window
nnoremap <leader>lo :lopen<CR>     " Open the location window

" Quick list mappings (for Ack/Ag)
nnoremap <leader>cn :cn<CR>        " Go to next item in quick list
nnoremap <leader>cp :cp<CR>        " Go to previous in quick list
nnoremap <leader>cc :cclose<CR>    " Close the quick list window
nnoremap <leader>co :copen<CR>     " Open the quick list window

" ================ Custom .vimrc.local ========================
" Loads a custom vimrc file if it exists.
" It will check if the file '~/.vimrc.local` exists and will source it.
" Useful for temporary settings or settings you don't wan to commit.

if filereadable(glob("~/.vimrc.local"))
  source ~/.vimrc.local
endif
